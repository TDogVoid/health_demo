image: elixir:latest

stages:
        - test
        - build_image
        - release_image

variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
        RELEASE_TAG: $CI_REGISTRY_IMAGE:latest

mix_tests:
        stage: test
        services:
                - postgres:latest
        variables:
                POSTGRES_USER: postgres
                POSTGRES_PASWORD: "postgres"
                POSTGRES_HOST: postgres
                MIX_ENV: "test"
        before_script:
                - apt-get update && apt-get -y install postgresql-client
                - mix local.hex --force
                - mix local.rebar --force
                - mix deps.get --only test
                - mix deps.compile
        script:
                - mix test
                - mix sobelow --config
build_image:
        stage: build_image
        image: docker:19.03.1
        services:
                - docker:19.03.1-dind
        script:
                - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
                - docker build -t $IMAGE_TAG .
                - docker push $IMAGE_TAG
        only:
                - master
                - dev


release_image:
        stage: release_image
        image: docker:19.03.1
        services:
                - docker:19.03.1-dind
        script:
                - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
                - docker pull $IMAGE_TAG 
                - docker tag $IMAGE_TAG  $RELEASE_TAG
                - docker push $RELEASE_TAG
        only:
                - master

